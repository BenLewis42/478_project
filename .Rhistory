View(top_15_country_deaths)
runApp()
Q
runApp()
Q
runApp()
Q
View(top_15_country_deaths)
runApp()
Q
Q
runApp()
Q
# Set up
source("analysis.R")
library(dplyr)
library(knitr)
library(ggplot2)
library(tidyverse)
library("HSAUR")
library("MASS")
library("Epi")
library("epitools")
library("dplyr")
source("analysis.R")
library("dplyr")
library("knitr")
tb_odds_data <- bcg_data %>%
dplyr::select(Study, Year, BCGVacc_OddsRatio)
kable(tb_odds_data)
source("analysis.R")
library("dplyr")
library("knitr")
library(ggplot2)
library(tidyverse)
tb_odds_vs_rr_plot <- ggplot(data = bcg_data, aes(x = BCGVacc_RR, y = BCGVacc_OddsRatio, group = 1)) +
geom_point() +
labs(title = "Relative Risk vs Odds Ratio of BCG Vaccine", x = "BCG Relative Risk", y = "BCG Odds Ratio")
tb_odds_vs_rr_plot
source("analysis.R")
library("dplyr")
library("knitr")
library(ggplot2)
library(tidyverse)
tb_odds_vs_rr_plot <- ggplot(data = bcg_data, aes(x = BCGVacc_RR, y = BCGVacc_OddsRatio, group = 1)) +
geom_point() +
labs(title = "Relative Risk vs Odds Ratio of BCG Vaccine", x = "BCG Relative Risk", y = "BCG Odds Ratio")
tb_odds_vs_rr_plot
low_birth_wt_data <- MASS::birthwt
Smoking <- sum(low_birth_wt_data$smoke == "1" & low_birth_wt_data$low == "1")
NoSmoking <- 59 - Smoking
SmokingNoLow <- sum(low_birth_wt_data$smoke == "1" & low_birth_wt_data$low == "0")
NoSmokingNoLow <- 130 - SmokingNoLow
Hypertension <- sum(low_birth_wt_data$ht == "1" & low_birth_wt_data$low == "1")
NoHypertension<- 59 - Hypertension
HypertensionNoLow <- sum(low_birth_wt_data$ht == "1" & low_birth_wt_data$low == "0")
NoHypertensionNoLow <- 130 - HypertensionNoLow
NoPrenatal <- sum(low_birth_wt_data$ftv == "0" & low_birth_wt_data$low == "1")
Prenatal <- 59 - NoPrenatal
NoPrenatalNoLow <- sum(low_birth_wt_data$ftv == "0" & low_birth_wt_data$low == "0")
PrenatalNoLow <- 130 - NoPrenatalNoLow
Birth20 <- sum(low_birth_wt_data$age < "20" & low_birth_wt_data$low == "1", na.rm=TRUE)
NoBirth20 <- 59 - Birth20
Birth20NoLow <- sum(low_birth_wt_data$age < "20" & low_birth_wt_data$low == "0", na.rm=TRUE)
NoBirth20NoLow <- 130 - Birth20NoLow
low_birth_wt_rr <- function(outcome, outcome2, variable, variable2) {
rr <- (outcome/(outcome + outcome2))/(variable/(variable + variable2))
return(rr)
}
low_birth_wt_rr_smoke <- low_birth_wt_rr(Smoking, SmokingNoLow, NoSmoking, NoSmokingNoLow)
low_birth_wt_rr_ht <- low_birth_wt_rr(Hypertension, HypertensionNoLow, NoHypertension, NoHypertensionNoLow)
low_birth_wt_rr_prenatal <- low_birth_wt_rr(Prenatal, PrenatalNoLow, NoPrenatal, NoPrenatalNoLow)
low_birth_wt_rr_birth20 <- low_birth_wt_rr(Birth20, Birth20NoLow, NoBirth20, NoBirth20NoLow)
low_birthwt_rr <- matrix(data = NA, nrow = 4, ncol = 1, byrow = FALSE,
dimnames = list(c("Smoking Status", "Hypertension Status", "Attending 0 prenatal care visits", "Giving Birth before Age 20"),
c("Relative Risking of Low-Birth Weight Infant")))
low_birthwt_rr[1,1] <- low_birth_wt_rr_smoke
low_birthwt_rr[2,1] <- low_birth_wt_rr_ht
low_birthwt_rr[3,1] <- low_birth_wt_rr_prenatal
low_birthwt_rr[4,1] <- low_birth_wt_rr_birth20
View(low_birthwt_rr)
data("bdendo")
data("bdendo")
data("bdendo")
View(bdendo)
CancerTotal <- sum(bdendo$d == "1")
NoCancerTotal <- sum(bdendo$d == "0")
HyperStatus <- sum(bdendo$hyp == "Yes" & bdendo$d == "1")
NoHyperStatus <- 63 - HyperStatus
HyperStatusNoCancer <- sum(bdendo$hyp == "Yes" & bdendo$d == "0")
NoHyperStatusNoCancer <- 252 - HyperStatusNoCancer
odds_table_hs[1,1] <- HyperStatus
odds_table_hs[2,1] <- NoHyperStatus
odds_table_hs[1,2] <- HyperStatusNoCancer
odds_table_hs[2,2] <- NoHyperStatusNoCancer
odds_table_gb <- matrix(data = NA, nrow = 2, ncol = 2, byrow = FALSE,
dimnames = list(c("GallBladder", "NoGallBladder"), c("EndoCancer", "NoEndoCancer")))
GallBladder <- sum(bdendo$gall == "Yes" & bdendo$d == "1")
NoGallBladder <- 63 - GallBladder
GallBladderNoCancer <- sum(bdendo$gall == "Yes" & bdendo$d == "0")
NoGallBladderNoCancer <- 252 - GallBladderNoCancer
odds_table_gb[1,1] <- GallBladder
odds_table_gb[2,1] <- NoGallBladder
odds_table_gb[1,2] <- GallBladderNoCancer
odds_table_gb[2,2] <- NoGallBladderNoCancer
odds_table_ob <- matrix(data = NA, nrow = 2, ncol = 2, byrow = FALSE,
dimnames = list(c("Obesity", "NoObesity"), c("EndoCancer", "NoEndoCancer")))
Obesity <- sum(bdendo$ob == "Yes" & bdendo$d == "1", na.rm=TRUE)
NoObesity <- 63 - Obesity
ObesityNoCancer <- sum(bdendo$ob == "Yes" & bdendo$d == "0", na.rm=TRUE)
NoObesityNoCancer <- 252 - ObesityNoCancer
odds_table_ob[1,1] <- Obesity
odds_table_ob[2,1] <- ObesityNoCancer
odds_table_ob[1,2] <- ObesityNoCancer
odds_table_ob[2,2] <- NoObesityNoCancer
odds_epi_hs <- epitab(odds_table_hs, y = NULL, method = c("oddsratio"), verbose = F)
odds_epi_gb <- epitab(odds_table_gb, y = NULL, method = c("oddsratio"), verbose = F)
odds_epi_ob <- epitab(odds_table_ob, y = NULL, method = c("oddsratio"), verbose = F)
odds_ratio_hs <- odds_epi_hs$tab
odds_ratio_gb <- odds_epi_gb$tab
odds_ratio_ob <- odds_epi_ob$tab
odds_epi_hs <- epitab(odds_table_hs, y = NULL, method = c("oddsratio"), verbose = F)
odds_table_hs <- matrix(data = NA, nrow = 2, ncol = 2, byrow = FALSE,
dimnames = list(c("HyperStatus", "NoHyperStatus"), c("EndoCancer", "NoEndoCancer")))
HyperStatus <- sum(bdendo$hyp == "Yes" & bdendo$d == "1")
NoHyperStatus <- 63 - HyperStatus
HyperStatusNoCancer <- sum(bdendo$hyp == "Yes" & bdendo$d == "0")
NoHyperStatusNoCancer <- 252 - HyperStatusNoCancer
odds_table_hs[1,1] <- HyperStatus
odds_table_hs[2,1] <- NoHyperStatus
odds_table_hs[1,2] <- HyperStatusNoCancer
odds_table_hs[2,2] <- NoHyperStatusNoCancer
odds_table_gb <- matrix(data = NA, nrow = 2, ncol = 2, byrow = FALSE,
dimnames = list(c("GallBladder", "NoGallBladder"), c("EndoCancer", "NoEndoCancer")))
GallBladder <- sum(bdendo$gall == "Yes" & bdendo$d == "1")
NoGallBladder <- 63 - GallBladder
GallBladderNoCancer <- sum(bdendo$gall == "Yes" & bdendo$d == "0")
NoGallBladderNoCancer <- 252 - GallBladderNoCancer
odds_table_gb[1,1] <- GallBladder
odds_table_gb[2,1] <- NoGallBladder
odds_table_gb[1,2] <- GallBladderNoCancer
odds_table_gb[2,2] <- NoGallBladderNoCancer
odds_table_ob <- matrix(data = NA, nrow = 2, ncol = 2, byrow = FALSE,
dimnames = list(c("Obesity", "NoObesity"), c("EndoCancer", "NoEndoCancer")))
Obesity <- sum(bdendo$ob == "Yes" & bdendo$d == "1", na.rm=TRUE)
NoObesity <- 63 - Obesity
ObesityNoCancer <- sum(bdendo$ob == "Yes" & bdendo$d == "0", na.rm=TRUE)
NoObesityNoCancer <- 252 - ObesityNoCancer
odds_table_ob[1,1] <- Obesity
odds_table_ob[2,1] <- ObesityNoCancer
odds_table_ob[1,2] <- ObesityNoCancer
odds_table_ob[2,2] <- NoObesityNoCancer
odds_epi_hs <- epitab(odds_table_hs, y = NULL, method = c("oddsratio"), verbose = F)
odds_epi_gb <- epitab(odds_table_gb, y = NULL, method = c("oddsratio"), verbose = F)
odds_epi_ob <- epitab(odds_table_ob, y = NULL, method = c("oddsratio"), verbose = F)
odds_ratio_hs <- odds_epi_hs$tab
odds_ratio_gb <- odds_epi_gb$tab
odds_ratio_ob <- odds_epi_ob$tab
odds_ratio_ob
odds_ratio_gb
odds_ratio_hs
View(odds_table_ob)
View(odds_table_hs)
View(odds_table_gb)
Obesity <- sum(bdendo$ob == "Yes" & bdendo$d == "1", na.rm=TRUE)
NoObesity <- 63 - Obesity
NoObesity <- 63 - Obesity
odds_table_ob[2,1] <- NoObesity
ObesityNoCancer <- sum(bdendo$ob == "Yes" & bdendo$d == "0", na.rm=TRUE)
odds_epi_ob <- epitab(odds_table_ob, y = NULL, method = c("oddsratio"), verbose = F)
odds_ratio_ob <- odds_epi_ob$tab
odds_epi_ob$tab
tab2 <- tabPanel("Map",
sidebarLayout(
sidebarPanel(
radioButtons("plotType", "Plot type",
c("Scatter"="p", "Line"="l")
),
h2("Booster Distribution"),
p('This map displays the % each states\'s population who has recieved at least
one booster shot. This shows significantly lower booster rates in the Southern U.S.,
states which are known to be poorer on average. This demonstrates that economic inequality
within the US may affect vaccine distribution.')
),
mainPanel(
leafletOutput("map")
)
)
ggplot(data = top_15_country_deaths, aes(x = Country,
y = input$ycol)) +
geom_bar(stat = "identity", position = "stack")
top_15_country_bar_plot <- ggplot(data = top_15_country_deaths, aes(x = fct_inorder(Country),
y = Total_Deaths) +
geom_bar(stat = "identity", position = "stack") +
labs(title = "Top 15 Highest COVID Deaths by Country vs Gender", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90)))
library(dplyr)
library(ggplot2)
library(tidyverse)
library(leaflet)
library(tigris)
data <- read.csv('data/global_dataset.csv')
shiny::runApp()
data <- read.csv('data/global_dataset.csv')
gdp_data <- read.csv('data/gdp_dataset.csv')
raw_state_data <- read.csv('data/us_state_vaccinations.csv')
# fix name (probably only a problem for my machine) -Ben
colnames(gdp_data)[1] <- "Country.Name"
# filtered data which have complete disaggregated data
data <- data %>%
filter(
Case...death.data.by.sex. == "Yes"
)
#select 2020 GDP values
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
# print column names
data_colnames <- data %>%
colnames()
# remove NA
data <- na.omit(data)
# change proportion of deaths from string to int
# remove % sign
data$Deaths....male. <- gsub("%$","",data$Deaths....male.)
data$Deaths....female. <- gsub("%$","",data$Deaths....female.)
data$Cases....male. <- gsub("%$","",data$Cases....male.)
data$Cases....female. <- gsub("%$","",data$Cases....female.)
# str to int
data$Deaths....male. <- strtoi(data$Deaths....male.)
data$Deaths....female. <- strtoi(data$Deaths....female.)
data$Cases....male. <- strtoi(data$Cases....male.)
data$Cases....female. <- strtoi(data$Cases....female.)
#merge data
data <- data %>%
left_join(gdp_data, by = c("Country" = "Country.Name"))
# mean proportion of deaths / cases by gender
female_prop_deaths_mean <- mean(data$Deaths....female.)
male_prop_deaths_mean <- mean(data$Deaths....male.)
female_prop_cases_mean <- mean(data$Cases....female.)
male_prop_cases_mean <- mean(data$Cases....male.)
# plot for distribution of deaths and case proportions for Females
Gender_deaths_plot <- ggplot(data = data, aes(x = Cases....female.,
y = Deaths....female.)) +
geom_point() +
labs(title = "Proportion of Deaths vs Proportion of Cases for Females", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)")
Gender_deaths_plot
# plot for distribution of deaths and case proportions for Females
Male_deaths_plot <- ggplot(data = data, aes(x = Cases....male.,
y = Deaths....male.)) +
geom_point() +
labs(title = "Proportion of Deaths for Males vs Proportion of Cases for Males", x = "Proportion of confirmed cases Male (%)", y = "Proportion of deaths in confirmed cases Male (%)")
Male_deaths_plot
top_15_country_deaths <- data %>%
filter(Deaths.date == "2022/03/01") %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, Cases.where.sex.disaggregated.data.is.available, Proportion.of.deaths.in.confirmed.cases..Male.female.ratio.) %>%
rename(Total_Deaths = Deaths.where.sex.disaggregated.data.is.available, Total_Cases = Cases.where.sex.disaggregated.data.is.available, Gender_Ratio = Proportion.of.deaths.in.confirmed.cases..Male.female.ratio.) %>%
top_n(15)
top_15_country_bar_plot <- ggplot(data = top_15_country_deaths, aes(x = fct_inorder(Country),
y = Total_Deaths) +
geom_bar(stat = "identity", position = "stack") +
labs(title = "Top 15 Highest COVID Deaths by Country vs Gender", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90)))
renderPlot("top_15_country_plot")
state_data <- raw_state_data %>%
group_by(location) %>%
filter(date == max(date)) %>%
select(location, total_boosters_per_hundred)
states <- states(cb = T)
states_merged <- geo_join(states, state_data, "NAME", "location")
states_merged <- subset(states_merged, !is.na(total_boosters_per_hundred))
pal <- colorNumeric("Blues", domain = states_merged$total_boosters_per_hundred)
map <- leaflet(states_merged) %>%
addTiles() %>%
addPolygons(data = states_merged,
color = "black",
opacity = 1,
fillColor = ~pal(states_merged$total_boosters_per_hundred),
fillOpacity = 1,
weight = 1,
smoothFactor = 0.8,
popup = ~total_boosters_per_hundred) %>%
addLegend("bottomleft", pal = pal, values = states_merged$total_boosters_per_hundred,
layerId = "colorLegend", title = "Booster Shot %", opacity = 1)
#Server
server <- function(input, output) {
output$top_15_country_plot <- renderPlot({
ggplot(data = top_15_country_deaths, aes(x = Country,
y = input$ycol)) +
geom_bar(stat = "identity", position = "stack")
})
output$map <- renderLeaflet({
leaflet(states_merged) %>%
addTiles() %>%
addPolygons(data = states_merged,
color = "black",
opacity = 1,
fillColor = ~pal(states_merged$total_boosters_per_hundred),
fillOpacity = 1,
weight = 1,
smoothFactor = 0.8,
popup = ~total_boosters_per_hundred) %>%
addLegend("bottomleft", pal = pal, values = states_merged$total_boosters_per_hundred,
layerId = "colorLegend", title = "Booster Shot %", opacity = 1) %>%
setView(-100, 40, zoom = 2.5)
})
output$gender_scatter <- renderPlot({
h = c(input$select)
Gender_deaths_plot <- ggplot() +
geom_point(data = data, aes(x = Cases....female.,
y = Deaths....female.)) +
labs(title = "Proportion of Deaths vs Proportion of Cases for Females",
x = "Proportion of confirmed cases Female (%)",
y = "Proportion of deaths in confirmed cases Female (%)") +
geom_point(data = data[h, ], aes(x = Cases....female.,
y = Deaths....female.), colour = "red")
return(Gender_deaths_plot)
})
}
runApp()
Q
server <- function(input, output) {
output$top_15_country_plot <- renderPlot({
ggplot(data = top_15_country_deaths, aes(x = Country,
y = input$ycol)) +
geom_bar(stat = "identity", position = "stack")
})
runApp()
runApp()
runApp()
runApp()
runApp()
library(dplyr)
library(ggplot2)
library(tidyverse)
library(leaflet)
library(tigris)
data <- read.csv('data/global_dataset.csv')
gdp_data <- read.csv('data/gdp_dataset.csv')
raw_state_data <- read.csv('data/us_state_vaccinations.csv')
# fix name (probably only a problem for my machine) -Ben
colnames(gdp_data)[1] <- "Country.Name"
# filtered data which have complete disaggregated data
data <- data %>%
filter(
Case...death.data.by.sex. == "Yes"
)
#select 2020 GDP values
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
# print column names
data_colnames <- data %>%
colnames()
# remove NA
data <- na.omit(data)
# change proportion of deaths from string to int
# remove % sign
data$Deaths....male. <- gsub("%$","",data$Deaths....male.)
data$Deaths....female. <- gsub("%$","",data$Deaths....female.)
data$Cases....male. <- gsub("%$","",data$Cases....male.)
data$Cases....female. <- gsub("%$","",data$Cases....female.)
# str to int
data$Deaths....male. <- strtoi(data$Deaths....male.)
data$Deaths....female. <- strtoi(data$Deaths....female.)
data$Cases....male. <- strtoi(data$Cases....male.)
data$Cases....female. <- strtoi(data$Cases....female.)
#merge data
data <- data %>%
left_join(gdp_data, by = c("Country" = "Country.Name"))
# mean proportion of deaths / cases by gender
female_prop_deaths_mean <- mean(data$Deaths....female.)
male_prop_deaths_mean <- mean(data$Deaths....male.)
female_prop_cases_mean <- mean(data$Cases....female.)
male_prop_cases_mean <- mean(data$Cases....male.)
# plot for distribution of deaths and case proportions for Females
Gender_deaths_plot <- ggplot(data = data, aes(x = Cases....female.,
y = Deaths....female.)) +
geom_point() +
labs(title = "Proportion of Deaths vs Proportion of Cases for Females", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)")
Gender_deaths_plot
# plot for distribution of deaths and case proportions for Females
Male_deaths_plot <- ggplot(data = data, aes(x = Cases....male.,
y = Deaths....male.)) +
geom_point() +
labs(title = "Proportion of Deaths for Males vs Proportion of Cases for Males", x = "Proportion of confirmed cases Male (%)", y = "Proportion of deaths in confirmed cases Male (%)")
Male_deaths_plot
top_15_country_deaths <- data %>%
filter(Deaths.date == "2022/03/01") %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, Cases.where.sex.disaggregated.data.is.available, Proportion.of.deaths.in.confirmed.cases..Male.female.ratio.) %>%
rename(Total_Deaths = Deaths.where.sex.disaggregated.data.is.available, Total_Cases = Cases.where.sex.disaggregated.data.is.available, Gender_Ratio = Proportion.of.deaths.in.confirmed.cases..Male.female.ratio.) %>%
top_n(15)
top_15_country_bar_plot <- ggplot(data = top_15_country_deaths, aes(x = fct_inorder(Country),
y = Total_Deaths) +
geom_bar(stat = "identity", position = "stack") +
labs(title = "Top 15 Highest COVID Deaths by Country vs Gender", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90)))
renderPlot("top_15_country_plot")
state_data <- raw_state_data %>%
group_by(location) %>%
filter(date == max(date)) %>%
select(location, total_boosters_per_hundred)
states <- states(cb = T)
states_merged <- geo_join(states, state_data, "NAME", "location")
states_merged <- subset(states_merged, !is.na(total_boosters_per_hundred))
pal <- colorNumeric("Blues", domain = states_merged$total_boosters_per_hundred)
map <- leaflet(states_merged) %>%
addTiles() %>%
addPolygons(data = states_merged,
color = "black",
opacity = 1,
fillColor = ~pal(states_merged$total_boosters_per_hundred),
fillOpacity = 1,
weight = 1,
smoothFactor = 0.8,
popup = ~total_boosters_per_hundred) %>%
addLegend("bottomleft", pal = pal, values = states_merged$total_boosters_per_hundred,
layerId = "colorLegend", title = "Booster Shot %", opacity = 1)
#Server
server <- function(input, output) {
output$top_15_country_plot <- renderPlot({
ggplot(data = top_15_country_deaths, aes(x = Country,
y = input$ycol)) +
geom_bar(stat = "identity", position = "stack")
})
output$map <- renderLeaflet({
leaflet(states_merged) %>%
addTiles() %>%
addPolygons(data = states_merged,
color = "black",
opacity = 1,
fillColor = ~pal(states_merged$total_boosters_per_hundred),
fillOpacity = 1,
weight = 1,
smoothFactor = 0.8,
popup = ~total_boosters_per_hundred) %>%
addLegend("bottomleft", pal = pal, values = states_merged$total_boosters_per_hundred,
layerId = "colorLegend", title = "Booster Shot %", opacity = 1) %>%
setView(-100, 40, zoom = 2.5)
})
output$gender_scatter <- renderPlot({
h = c(input$select)
Gender_deaths_plot <- ggplot() +
geom_point(data = data, aes(x = Cases....female.,
y = Deaths....female.)) +
labs(title = "Proportion of Deaths vs Proportion of Cases for Females",
x = "Proportion of confirmed cases Female (%)",
y = "Proportion of deaths in confirmed cases Female (%)") +
geom_point(data = data[h, ], aes(x = Cases....female.,
y = Deaths....female.), colour = "red")
return(Gender_deaths_plot)
})
}
library(shiny)
library(leaflet)
tab1 <-  tabPanel("Introduction",
tags$p(
id = "Introduction",
"Our research project’s purpose is to explore patterns in COVID-19 cases, deaths, and vaccination
rates and observe how factors such as location and factor impact these metrics.")
)
tab2 <- tabPanel("Map",
sidebarLayout(
sidebarPanel(
radioButtons("plotType", "Plot type",
c("Scatter"="p", "Line"="l")
),
h2("Booster Distribution"),
p('This map displays the % each states\'s population who has recieved at least
one booster shot. This shows significantly lower booster rates in the Southern U.S.,
states which are known to be poorer on average. This demonstrates that economic inequality
within the US may affect vaccine distribution.')
),
mainPanel(
leafletOutput("map")
)
)
)
tab3 <- tabPanel("Gender",
pageWithSidebar(
headerPanel('Top 15 Highest COVID Deaths by Country vs Gender'),
sidebarPanel(
selectInput(inputId = "ycol", label = "Select Y Value", choices = c("Total_Deaths", "Total_Cases", "Gender_Ratio"))
),
mainPanel(
plotOutput('top_15_country_plot')
)
),
pageWithSidebar(
headerPanel("hi"),
sidebarPanel(
selectInput("selectcountry", label = h3("Select box"),
choices = list("United States" = "USA", "Choice 2" = 2, "Choice 3" = 3),
selected = "USA")
),
mainPanel(
plotOutput('gender_scatter')
)
)
)
tab4 <- tabPanel("Location"
)
ui <- navbarPage(title = "INFO 478: Covid 19",
tab1,
tab2,
tab3,
tab4
)
runApp()
shiny::runApp()
runApp()
install.packages("tigris")
shiny::runApp()
install.packages(tigris)
install.packages("tigris")
