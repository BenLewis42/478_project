"Total Refugees & Aslyees" = "refugee_choro",
"Percent of US Refugees and Asylees out of
their Country Population" = "ra_pop_choro"
)
)
),
mainPanel(
plotOutput('immigrant_map'),
textOutput('conclusion')
)
)
),
tabPanel(
"Tables",
sidebarLayout(
sidebarPanel(
radioButtons("table", "Table Options:",
c("Total US Immigrant" = "immigrant_table",
"Percent of US Immigrants out of
their Country Population" = "immigrant_pop_table",
"Total Refugees & Aslyees" = "refugee_table",
"Percent of US Refugees and Asylees out of
their Country Population" = "ra_pop_table"
)
)
),
mainPanel(
tableOutput('immigrant_tables')
)
)
)
)
)
)
page_five <- tabPanel(
"Summary Conclusions",
fluidPage(
titlePanel("What Can We Take Away From This Data?"),
p(style = "font-size:15px;", "The data that we analyzed
reveals many important insights about the immigration status
in the US. Focusing specifically on the data about the
number/percentages of lawful immigrant obtainees, three
major conclusion points were discovered:"),
sidebarLayout(
sidebarPanel(
id = "sidebar",
width = 4,
h3(style = "font-size:25px;", "Highest and Lowest Percentage
Distribution of Lawful Residency Obtainees"), br(),
p(style = "font-size:15px;", "When analyzing the data surrounding
the number of people from each global region trying to gain legal,
permanent residency in the US, we found the top and bottom regions
by percentage. They respectively turned out to be North America and
Oceania. This finding shows us how most of the immigrants trying
to legally live in the US are already from the North America region,
with Mexico leading the other countries with 16,0132 immigrants in
2018."), br(), h3(style = "font-size:25px;", "Immigration Trend
(1918-2018)"),
br(), p(style = "font-size:15px;", "The graph depicting the
immigration rate to the US from 1918 to 2018 displays how there has
been a linear-like increase in immigrants. As seen on the graph on the
right, the best-fit line drawn mimics a linear trend. This demonstrates
how there has been a mostly consistent increase in the immigration rate
to the US, in the last century."), br(),
h3(style = "font-size:25px;", "Immigration Trend in Recent Decades"),
br(), p(style = "font-size:15px;", "A closer look at the immigration
rate graph reveals that in contrast to the immigration trend over the
century and its gradual growth, the recent decades have shown a slight
decline in the US immigration rate. A snapshot of the graph discloses
the relative decrease in immigration from 2005 to 2018. This insight
exhibits how in recent years, immigration to the US has started to slow
down. This is an interesting piece of information that could be further
explored in order to find the underlying causes for the subsiding
immigration rate."), br(),
),
mainPanel(
br(),
tableOutput("takeaway_table"),
br(),
plotOutput("takeaway_chart"),
br(),
plotOutput("takeaway_chart_2")
)
)
)
)
ui <- navbarPage(id = "nav",
"Immigration in the US",
page_one,
page_two,
page_three,
page_four,
page_five
# theme = shinytheme("cerulean")
)
runApp()
Q
Q
runApp()
Q
Q
runApp()
immigration_region_data %>%
group_by(Regions)
new_table <- immigration_region_data %>%
group_by(Regions)
View(new_table)
View(new_table)
View(new_table)
View(new_table)
Q
Q
Q
runApp()
Q
Q
Q
runApp()
Q
Q
Q
Q
View(immigrant_total)
runApp()
Q
Q
Q
runApp()
Q
Q
Q
runApp()
Q
Q
runApp()
Q
Q
Q
Q
runApp()
Q
Q
Q
runApp()
Q
Q
Q
Q
runApp()
Q
Q
Q
runApp()
library(leaflet)
Q
Q
Q
Q
Q
Q
library(leaflet)
runApp()
runApp()
Q
Q
Q
Q
install.packages("rgdal")
runApp()
Q
Q
Q
Q
runApp()
Q
Q
Q
Q
runApp()
Q
Q
Q
Q
Q
runApp()
Q
Q
Q
Q
Q
Q
runApp()
Q
Q
Q
Q
Q
Q
Q
runApp()
runApp()
Q
Q
Q
Q
runApp()
Q
Q
Q
runApp()
runApp()
Q
Q
Q
Q
Q
Q
runApp()
Q
Q
Q
Q
runApp()
Q
Q
runApp()
Q
Q
Q
Q
Q
Q
Q
Q
runApp()
Q
Q
Q
Q
Q
Q
Q
runApp()
Q
Q
Q
Q
Q
runApp()
Q
Q
Q
runApp()
Q
Q
Q
Q
runApp()
runApp()
Q
Q
Q
Q
Q
runApp()
Q
Q
Q
Q
Q
Q
runApp()
Q
Q
Q
Q
Q
Q
runApp()
Q
Q
Q
Q
Q
runApp()
Q
Q
Q
Q
Q
runApp()
Q
Q
Q
Q
Q
Q
Q
runApp()
print(new_years_plot)
library(tidyverse)
new_years_data <- read.csv("data/nyr_data.csv")
new_years_plot <- ggplot(new_years_data, mapping = aes(x= State, y= X2022category)) +
geom_point(color = "cornflowerblue")
print(new_years_plot)
show(new_years_plot)
new_years_data <- read.csv("data/nyr_data.csv")
new_years_plot <- ggplot(new_years_data, aes(x= State, y= X2022category)) +
geom_point(color = "cornflowerblue")
Q
new_years_data <- read.csv("data/nyr_data.csv")
Q
new_years_data <- read.csv("data/nyr_data.csv")
new_years_data <- read.csv("/data/nyr_data.csv")
Q
new_years_data <- read.csv("nyr_data.csv")
new_years_data <- read.csv("data/nyr_data.csv")
new_years_data <- read.csv(file = "data/nyr_data.csv")
Q
new_years_data <- read.csv(file = 'data/nyr_data.csv')
library(ggplot2)
new_years_data <- read.csv(file = 'data/nyr_data.csv')
new_years_data <- read.csv("data/nyr_data.csv")
netflix_data <- read.csv("data/netflix_titles.csv")
netflix_data <- read.csv("data/netflix_titles.csv")
netflix_data <- read.csv("data/netflixtitles.csv")
netflix_data <- read.csv("data/netflixtitles.csv/")
shiny::runApp('Documents/info478-code')
top_15_country_bar_plot <- ggplot(data = top_15_country_deaths, aes(x = fct_inorder(Country),
y = Total_Deaths) +
geom_bar(stat = "identity", position = "stack") +
labs(title = "Top 15 Highest COVID Deaths by Country vs Gender", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
runApp('Documents/info478-code')
Q
runApp('Documents/info478-code')
Q
Q
shiny::runApp('Documents/workbooks/a3-nihagaddam')
Q
tab1 <-  tabPanel("Introduction",
tags$p(
id = "Introduction",
"This website seeks to explore how various COVID-19 interventions affect different disease models.
The interventions included in this analysis are social distancing and face mask usage. The first page
explores these interventions in a Deterministic Model where recovery from COVID does not give immunity.
The second page explores the interventions in a Stochastic Model where the spread of disease is
simulated in a population of individually identifiable elements.")
)
runApp('Documents/workbooks/a3-nihagaddam')
runApp('Documents/workbooks/a3-nihagaddam')
Q
runApp('Documents/workbooks/a3-nihagaddam')
Q
runApp('Documents/workbooks/a3-nihagaddam')
Q
runApp('Documents/workbooks/a3-nihagaddam')
Q
dev.off()
Q
Q
param.icm <- param.icm(inf.prob = c(0.1), act.rate = 0.5, rec.rate = 0.01)
init.icm <- init.icm(s.num = 500, i.num = 1,r.num = 0)
control.icm <- control.icm(type = "SIR", nsims = 100, nsteps = 300)
mod.icm <- icm(param.icm, init.icm, control.icm)
plot(mod.icm)
dev.off()
param.icm <- param.icm(inf.prob = c(0.1), act.rate = 0.5, rec.rate = 0.01)
init.icm <- init.icm(s.num = 500, i.num = 1,r.num = 0)
control.icm <- control.icm(type = "SIR", nsims = 100, nsteps = 300)
mod.icm <- icm(param.icm, init.icm, control.icm)
plot(mod.icm)
runApp('Documents/workbooks/a3-nihagaddam')
Q
runApp('Documents/workbooks/a3-nihagaddam')
Q
runApp('Documents/workbooks/a3-nihagaddam')
runApp('Documents/workbooks/a3-nihagaddam')
runApp('Documents/workbooks/a3-nihagaddam')
runApp('Documents/workbooks/a3-nihagaddam')
shiny::runApp('Documents/info478-code')
data <- read.csv('data/global_dataset.csv')
gdp_data <- read.csv('data/gdp_dataset.csv')
raw_state_data <- read.csv('data/us_state_vaccinations.csv')
# fix name (probably only a problem for my machine) -Ben
colnames(gdp_data)[1] <- "Country.Name"
# filtered data which have complete disaggregated data
data <- data %>%
filter(
Case...death.data.by.sex. == "Yes"
)
#select 2020 GDP values
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
# print column names
data_colnames <- data %>%
colnames()
# remove NA
data <- na.omit(data)
# change proportion of deaths from string to int
# remove % sign
data$Deaths....male. <- gsub("%$","",data$Deaths....male.)
data$Deaths....female. <- gsub("%$","",data$Deaths....female.)
data$Cases....male. <- gsub("%$","",data$Cases....male.)
data$Cases....female. <- gsub("%$","",data$Cases....female.)
# str to int
data$Deaths....male. <- strtoi(data$Deaths....male.)
data$Deaths....female. <- strtoi(data$Deaths....female.)
data$Cases....male. <- strtoi(data$Cases....male.)
data$Cases....female. <- strtoi(data$Cases....female.)
#merge data
data <- data %>%
left_join(gdp_data, by = c("Country" = "Country.Name"))
View(data)
runApp('Documents/info478-code')
runApp('Documents/info478-code')
Q
runApp('Documents/info478-code')
Q
runApp('Documents/info478-code')
Q
runApp('Documents/info478-code')
Q
setwd("~/Documents/info478-code")
runApp()
runApp()
covid_stats <- read.csv('data/covid_stats.csv')
View(covid_stats)
covid_stats_data <- covid_stats
View(covid_stats_data)
install.packages("readxl")
install.packages("readxl")
covid_stats <- read.excel('data/covid_stats.csv')
covid_stats <- read.xlsx('data/covid_stats.csv')
library("readxl")
covid_stats <- read_excel('data/covid_stats.csv')
setwd("~/Documents/info478-code")
covid_stats <- read_excel('data/covid_stats.csv')
raw_state_data <- read.csv('data/us_state_vaccinations.xls')
covid_stats <- read_excel('data/covid_stats.xls')
View(covid_stats)
covid_stats_data <- covid_stats %>%
arrange(desc(`Cases - cumulative total`)) %>%
select(Name, `Cases - cumulative total`, `Cases - cumulative total per 100000 population`, `Deaths - cumulative total`, `Deaths - cumulative total per 100000 population`) %>%
rename("Total Cases" = `Cases - cumulative total`, "Total Cases per 100000 population" = `Cases - cumulative total per 100000 population`,
"Total Deaths" = `Deaths - cumulative total`, "Total Deaths per 100000 population" = `Deaths - cumulative total per 100000 population`) %>%
top_n(10)
library(dplyr)
covid_stats_data <- covid_stats %>%
arrange(desc(`Cases - cumulative total`)) %>%
select(Name, `Cases - cumulative total`, `Cases - cumulative total per 100000 population`, `Deaths - cumulative total`, `Deaths - cumulative total per 100000 population`) %>%
rename("Total Cases" = `Cases - cumulative total`, "Total Cases per 100000 population" = `Cases - cumulative total per 100000 population`,
"Total Deaths" = `Deaths - cumulative total`, "Total Deaths per 100000 population" = `Deaths - cumulative total per 100000 population`) %>%
top_n(10)
View(covid_stats_data)
covid_stats_data <- covid_stats %>%
arrange(desc(`Cases - cumulative total`))
covid_stats_data <- covid_stats %>%
arrange(desc(`Cases - cumulative total`)) %>%
select(Name, `Cases - cumulative total`, `Cases - cumulative total per 100000 population`, `Deaths - cumulative total`, `Deaths - cumulative total per 100000 population`)
covid_stats_data <- covid_stats %>%
arrange(desc(`Cases - cumulative total`)) %>%
select(Name, `Cases - cumulative total`, `Cases - cumulative total per 100000 population`, `Deaths - cumulative total`, `Deaths - cumulative total per 100000 population`) %>%
rename("Total Cases" = `Cases - cumulative total`, "Total Cases per 100000 population" = `Cases - cumulative total per 100000 population`,
"Total Deaths" = `Deaths - cumulative total`, "Total Deaths per 100000 population" = `Deaths - cumulative total per 100000 population`)
covid_stats_data <- covid_stats %>%
arrange(desc(`Cases - cumulative total`)) %>%
select(Name, `Cases - cumulative total`, `Cases - cumulative total per 100000 population`, `Deaths - cumulative total`, `Deaths - cumulative total per 100000 population`) %>%
rename("Total Cases" = `Cases - cumulative total`, "Total Cases per 100000 population" = `Cases - cumulative total per 100000 population`,
"Total Deaths" = `Deaths - cumulative total`, "Total Deaths per 100000 population" = `Deaths - cumulative total per 100000 population`) %>%
top_n(10)
covid_stats_data <- covid_stats %>%
arrange(desc(`Cases - cumulative total`)) %>%
select(Name, `Cases - cumulative total`, `Cases - cumulative total per 100000 population`, `Deaths - cumulative total`, `Deaths - cumulative total per 100000 population`) %>%
rename("Total Cases" = `Cases - cumulative total`, "Total Cases per 100000 population" = `Cases - cumulative total per 100000 population`,
"Total Deaths" = `Deaths - cumulative total`, "Total Deaths per 100000 population" = `Deaths - cumulative total per 100000 population`) %>%
top_n(15)
covid_stats_data <- covid_stats %>%
arrange(desc(`Cases - cumulative total`)) %>%
top_n(15)
covid_stats_data <- covid_stats %>%
arrange(desc(`Cases - cumulative total`)) %>%
top_n(10)
covid_stats_data <- covid_stats %>%
arrange(desc(`Cases - cumulative total`)) %>%
top_n(10) %>%
select(Name, `Cases - cumulative total`, `Cases - cumulative total per 100000 population`, `Deaths - cumulative total`, `Deaths - cumulative total per 100000 population`) %>%
rename("Total Cases" = `Cases - cumulative total`, "Total Cases per 100000 population" = `Cases - cumulative total per 100000 population`,
"Total Deaths" = `Deaths - cumulative total`, "Total Deaths per 100000 population" = `Deaths - cumulative total per 100000 population`) %>%
covid_stats_data <- covid_stats %>%
arrange(desc(`Cases - cumulative total`)) %>%
top_n(10) %>%
select(Name, `Cases - cumulative total`, `Cases - cumulative total per 100000 population`, `Deaths - cumulative total`, `Deaths - cumulative total per 100000 population`) %>%
rename("Total Cases" = `Cases - cumulative total`, "Total Cases per 100000 population" = `Cases - cumulative total per 100000 population`,
"Total Deaths" = `Deaths - cumulative total`, "Total Deaths per 100000 population" = `Deaths - cumulative total per 100000 population`)
library(dplyr)
covid_stats_data <- covid_stats %>%
arrange(desc(`Cases - cumulative total`)) %>%
top_n(10) %>%
select(Name, `Cases - cumulative total`, `Cases - cumulative total per 100000 population`, `Deaths - cumulative total`, `Deaths - cumulative total per 100000 population`) %>%
rename("Total Cases" = `Cases - cumulative total`, "Total Cases per 100000 population" = `Cases - cumulative total per 100000 population`,
"Total Deaths" = `Deaths - cumulative total`, "Total Deaths per 100000 population" = `Deaths - cumulative total per 100000 population`)
shiny::runApp()
runApp()
runApp()
covid_stats_data <- covid_stats %>%
arrange(desc(`Cases - cumulative total`)) %>%
top_n(25) %>%
select(Name, `Cases - cumulative total`, `Cases - cumulative total per 100000 population`, `Deaths - cumulative total`, `Deaths - cumulative total per 100000 population`) %>%
rename("Total Cases" = `Cases - cumulative total`, "Total Cases per 100000 population" = `Cases - cumulative total per 100000 population`,
"Total Deaths" = `Deaths - cumulative total`, "Total Deaths per 100000 population" = `Deaths - cumulative total per 100000 population`)
runApp()
runApp()
