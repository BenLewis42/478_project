)
# The analysis suggests that mothers who are smokers, have zero prenatal visits,
# and have history of hypertension have higher risk of having a baby with low birth weight
# Meanwhile, mothers who are under the age of twenty have slightly lower risk of having a baby
# with a low birth weight. Those with hypertension seems to have the highest risk of having a low
# birth weight child.
# use kable to create table in rmd
# Endometrial Cancer
# use method = oddsratio
# use matrix
data("bdendo")
matrix_create <- function(df, col) {
disease_pos_ct <- df %>%
filter(d == 1, !!as.name(col) == "Yes") %>%
nrow()
print(disease_pos_ct)
non_disease_pos_ct <- df %>%
filter(d == 0, !!as.name(col) == "Yes") %>%
nrow()
disease_neg_ct <- df %>%
filter(d == 1, !!as.name(col) == "No") %>%
nrow()
non_disease_neg_ct <- df %>%
filter(d == 0, !!as.name(col) == "No") %>%
nrow()
input <- matrix(c(disease_pos_ct, non_disease_pos_ct, disease_neg_ct, non_disease_neg_ct), 2, 2)
return(input)
}
ht_matrix <- matrix_create(bdendo, "hyp")
gall_matrix <- matrix_create(bdendo, "gall")
ob_matrix <- matrix_create(bdendo, "ob")
ht_odds_ratio <- epitab(ht_matrix, method="oddsratio")
gall_odds_ratio <- epitab(gall_matrix, method="oddsratio")
ob_odds_ratio <- epitab(ob_matrix, method="oddsratio")
ht_odds_ratio
ht_odds_ratio[1]
ht_odds_ratio[1]
ht_odds_ratio[2]
ht_odds_ratio[1]
ob_odds_ratioi[1]
ht_odds_ratio[1]
gall_odds_ratio[1]
ob_odds_ratio[1]
---
title: "index"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r}
setwd('~/GitHub/478_project')
data <- read.csv('data/us_state_vaccinations.csv')
```
---
title: "index"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r}
data <- read.csv('data/us_state_vaccinations.csv')
```
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
data <- read.csv('../data/global_dataset.csv')
# filtered data which have complete disaggregated data
data <- data %>%
filter(
Case...death.data.by.sex. == "Yes"
)
# print column names
data_colnames <- data %>%
colnames()
# remove NA
data <- na.omit(data)
# change proportion of deaths from string to int
# remove % sign
data$Deaths....male. <- gsub("%$","",data$Deaths....male.)
data$Deaths....female. <- gsub("%$","",data$Deaths....female.)
data$Cases....male. <- gsub("%$","",data$Cases....male.)
data$Cases....female. <- gsub("%$","",data$Cases....female.)
# str to int
data$Deaths....male. <- strtoi(data$Deaths....male.)
data$Deaths....female. <- strtoi(data$Deaths....female.)
data$Cases....male. <- strtoi(data$Cases....male.)
data$Cases....female. <- strtoi(data$Cases....female.)
# mean proportion of deaths / cases by gender
female_prop_deaths_mean <- mean(data$Deaths....female.)
male_prop_deaths_mean <- mean(data$Deaths....male.)
female_prop_cases_mean <- mean(data$Cases....female.)
male_prop_cases_mean <- mean(data$Cases....male.)
# plot for distribution of deaths and case proportions for Females
Gender_deaths_plot <- ggplot(data = data, aes(x = Cases....female.,
y = Deaths....female.)) +
geom_point() +
labs(title = "Proportion of Deaths vs Proportion of Cases for Females", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)")
Gender_deaths_plot
# plot for distribution of deaths and case proportions for Females
Gender_deaths_plot <- ggplot(data = data, aes(x = Cases....female.,
y = Deaths....female.)) +
geom_point() +
labs(title = "Proportion of Deaths vs Proportion of Cases for Females", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)")
Gender_deaths_plot
View(data)
# plot for distribution of deaths and case proportions for Females
Gender_deaths_plot <- ggplot(data = data, aes(x = Cases....female.,
y = Deaths....female.)) +
geom_point() +
labs(title = "Proportion of Deaths vs Proportion of Cases for Females", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)")
Gender_deaths_plot
View(data)
gdp_data <- read.csv('../data/gdp_dataset.csv')
gdp_data <- read.csv('../data/gdp_dataset.csv')
View(gdp_data)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
data <- read.csv('../data/global_dataset.csv')
gdp_data <- read.csv('../data/gdp_dataset.csv')
# filtered data which have complete disaggregated data
data <- data %>%
filter(
Case...death.data.by.sex. == "Yes"
)
# print column names
data_colnames <- data %>%
colnames()
# remove NA
data <- na.omit(data)
# change proportion of deaths from string to int
# remove % sign
data$Deaths....male. <- gsub("%$","",data$Deaths....male.)
data$Deaths....female. <- gsub("%$","",data$Deaths....female.)
data$Cases....male. <- gsub("%$","",data$Cases....male.)
data$Cases....female. <- gsub("%$","",data$Cases....female.)
# str to int
data$Deaths....male. <- strtoi(data$Deaths....male.)
data$Deaths....female. <- strtoi(data$Deaths....female.)
data$Cases....male. <- strtoi(data$Cases....male.)
data$Cases....female. <- strtoi(data$Cases....female.)
# mean proportion of deaths / cases by gender
female_prop_deaths_mean <- mean(data$Deaths....female.)
male_prop_deaths_mean <- mean(data$Deaths....male.)
female_prop_cases_mean <- mean(data$Cases....female.)
male_prop_cases_mean <- mean(data$Cases....male.)
View(gdp_data)
gdp_data <- na.omit(gdp_data)
gdp_data <- na.omit("2020")
gdp_data <- read.csv('../data/gdp_dataset.csv')
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
final_data <- left_join(data, gdp_data)
final_data <- left_join(data, gdp_data, by = "Country.Name")
final_data <- full_join(data, gdp_data, by = "Country.Name")
final_data <- full_join(data, gdp_data, by = "X2020")
final_data <- left_join(data, gdp_data, by = "X2020")
gdp_data <- gdp_data %>%
select(Country.Name == data$Country, X2020)
gdp_data <- gdp_data %>%
select(gdp_data$Country.Name == data$Country, X2020)
gdp_data <- gdp_data %>%
select(Country.Name == "data$Country", X2020)
gdp_data <- gdp_data %>%
select(Country.Name == "data$Country", X2020)
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
final_data <- full_join(data, gdp_data, by = "X2020")
final_data <- full_join(data, gdp_data)
gdp_data <- gdp_data %>%
select(Country.Name, X2020) %>%
filter(Country.Name == data$Country)
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
final_data <- left_join(data, gdp_data, by = "Country")
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
View(gdp_data)
gdp_data <- gdp_data %>%
filter(Country.Name, X2020)
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
View(gdp_data)
gdp_data <- read.csv('../data/gdp_dataset.csv')
View(gdp_data)
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
final_data <- left_join(data, gdp_data, by = "Country")
data <- data %>%
left_join(gdp_data, by = c("Country" = "Country.Name"))
View(data)
data <- data %>%
mutate(data, Total_Deaths = Deaths....male. + Deaths....female.)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
data <- read.csv('../data/global_dataset.csv')
gdp_data <- read.csv('../data/gdp_dataset.csv')
# filtered data which have complete disaggregated data
data <- data %>%
filter(
Case...death.data.by.sex. == "Yes"
)
#select 2020 GDP values
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
# print column names
data_colnames <- data %>%
colnames()
# remove NA
data <- na.omit(data)
# change proportion of deaths from string to int
# remove % sign
data$Deaths....male. <- gsub("%$","",data$Deaths....male.)
data$Deaths....female. <- gsub("%$","",data$Deaths....female.)
data$Cases....male. <- gsub("%$","",data$Cases....male.)
data$Cases....female. <- gsub("%$","",data$Cases....female.)
# str to int
data$Deaths....male. <- strtoi(data$Deaths....male.)
data$Deaths....female. <- strtoi(data$Deaths....female.)
data$Cases....male. <- strtoi(data$Cases....male.)
data$Cases....female. <- strtoi(data$Cases....female.)
#merge data
data <- data %>%
left_join(gdp_data, by = c("Country" = "Country.Name"))
# mean proportion of deaths / cases by gender
female_prop_deaths_mean <- mean(data$Deaths....female.)
male_prop_deaths_mean <- mean(data$Deaths....male.)
female_prop_cases_mean <- mean(data$Cases....female.)
male_prop_cases_mean <- mean(data$Cases....male.)
GDP_plot <- ggplot(data = data, aes(x = X2020,
y = Deaths.where.sex.disaggregated.data.is.available) +
geom_point() +
labs(title = "Global GDP vs Covid-Related Deaths", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)"))
GDP_plot <- ggplot(data = data, aes(x = Country,
y = Deaths.where.sex.disaggregated.data.is.available) +
geom_point() +
labs(title = "Global GDP vs Covid-Related Deaths", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)"))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
data <- read.csv('../data/global_dataset.csv')
gdp_data <- read.csv('../data/gdp_dataset.csv')
# filtered data which have complete disaggregated data
data <- data %>%
filter(
Case...death.data.by.sex. == "Yes"
)
#select 2020 GDP values
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
# print column names
data_colnames <- data %>%
colnames()
# remove NA
data <- na.omit(data)
# change proportion of deaths from string to int
# remove % sign
data$Deaths....male. <- gsub("%$","",data$Deaths....male.)
data$Deaths....female. <- gsub("%$","",data$Deaths....female.)
data$Cases....male. <- gsub("%$","",data$Cases....male.)
data$Cases....female. <- gsub("%$","",data$Cases....female.)
# str to int
data$Deaths....male. <- strtoi(data$Deaths....male.)
data$Deaths....female. <- strtoi(data$Deaths....female.)
data$Cases....male. <- strtoi(data$Cases....male.)
data$Cases....female. <- strtoi(data$Cases....female.)
#merge data
data <- data %>%
left_join(gdp_data, by = c("Country" = "Country.Name"))
# mean proportion of deaths / cases by gender
female_prop_deaths_mean <- mean(data$Deaths....female.)
male_prop_deaths_mean <- mean(data$Deaths....male.)
female_prop_cases_mean <- mean(data$Cases....female.)
male_prop_cases_mean <- mean(data$Cases....male.)
GDP_plot <- ggplot(data = data, aes(x = Country,
y = Deaths.where.sex.disaggregated.data.is.available) +
geom_point() +
labs(title = "Global GDP vs Covid-Related Deaths", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)"))
GDP_plot <- ggplot(data = data, aes(x = Country,
y = Deaths.where.sex.disaggregated.data.is.available) +
geom_point() +
labs(title = "Global GDP vs Covid-Related Deaths", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)"))
# plot for distribution of deaths and case proportions for Females
Gender_deaths_plot <- ggplot(data = data, aes(x = Cases....female.,
y = Deaths....female.)) +
geom_point() +
labs(title = "Proportion of Deaths vs Proportion of Cases for Females", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)")
Gender_deaths_plot
# Data frame that only contains the top 10 diseases for deaths
top_10_by_deaths <- colombia_data %>%
filter(metric == "deaths") %>%
arrange(desc(Value)) %>%
select(cause, Value) %>%
rename(Cause = cause) %>%
top_n(10)
# Set up
library(dplyr)
library(knitr)
library(ggplot2)
library(tidyverse)
# Load data
colombia_data <- read.csv('data/prepped/overview.csv')
# Data frame that only contains the top 10 diseases for deaths
top_10_by_deaths <- colombia_data %>%
filter(metric == "deaths") %>%
arrange(desc(Value)) %>%
select(cause, Value) %>%
rename(Cause = cause) %>%
top_n(10)
kable(top_10_by_deaths)
View(colombia_data)
top_10_country_deaths <- data %>%
filter(metric == "Country") %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available) %>%
top_n(15)
# Set up
library(dplyr)
library(knitr)
library(ggplot2)
library(tidyverse)
# Load data
colombia_data <- read.csv('data/prepped/overview.csv')
colombia_data <- read.csv('data/prepped/overview.csv')
View(colombia_data)
top_10_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available) %>%
top_n(15)
View(top_10_country_deaths)
top_10_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID"))
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID"))
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID")
GDP_plot
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID")
GDP_plot
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID")
GDP_plot
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
data <- read.csv('../data/global_dataset.csv')
gdp_data <- read.csv('../data/gdp_dataset.csv')
# filtered data which have complete disaggregated data
data <- data %>%
filter(
Case...death.data.by.sex. == "Yes"
)
#select 2020 GDP values
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
# print column names
data_colnames <- data %>%
colnames()
# remove NA
data <- na.omit(data)
# change proportion of deaths from string to int
# remove % sign
data$Deaths....male. <- gsub("%$","",data$Deaths....male.)
data$Deaths....female. <- gsub("%$","",data$Deaths....female.)
data$Cases....male. <- gsub("%$","",data$Cases....male.)
data$Cases....female. <- gsub("%$","",data$Cases....female.)
# str to int
data$Deaths....male. <- strtoi(data$Deaths....male.)
data$Deaths....female. <- strtoi(data$Deaths....female.)
data$Cases....male. <- strtoi(data$Cases....male.)
data$Cases....female. <- strtoi(data$Cases....female.)
#merge data
data <- data %>%
left_join(gdp_data, by = c("Country" = "Country.Name"))
# mean proportion of deaths / cases by gender
female_prop_deaths_mean <- mean(data$Deaths....female.)
male_prop_deaths_mean <- mean(data$Deaths....male.)
female_prop_cases_mean <- mean(data$Cases....female.)
male_prop_cases_mean <- mean(data$Cases....male.)
# plot for distribution of deaths and case proportions for Females
Gender_deaths_plot <- ggplot(data = data, aes(x = Cases....female.,
y = Deaths....female.)) +
geom_point() +
labs(title = "Proportion of Deaths vs Proportion of Cases for Females", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)")
Gender_deaths_plot
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID")
GDP_plot
view(GDP_plot)
view(Gender_deaths_plot)
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID")
GDP_plot
print(GDP_plot)
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID")
print(GDP_plot)
View(GDP_plot)
print(GDP_plot)
burden_by_cause <- overall_metric_data %>%
group_by(cause_name) %>%
summarise(deaths = mean(deaths, na.rm=TRUE), ylds = mean(ylds, na.rm=TRUE), ylls = mean(ylls, na.rm=TRUE), dalys = mean(dalys, na.rm=TRUE)) %>%
top_n(10)
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
print(GDP_plot)
View(top_15_country_deaths)
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
GDP_plot
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
GDP_plot
install.packages("leaflet")
install.packages("tigris")
