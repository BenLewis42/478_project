final_data <- left_join(data, gdp_data, by = "Country")
data <- data %>%
left_join(gdp_data, by = c("Country" = "Country.Name"))
View(data)
data <- data %>%
mutate(data, Total_Deaths = Deaths....male. + Deaths....female.)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
data <- read.csv('../data/global_dataset.csv')
gdp_data <- read.csv('../data/gdp_dataset.csv')
# filtered data which have complete disaggregated data
data <- data %>%
filter(
Case...death.data.by.sex. == "Yes"
)
#select 2020 GDP values
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
# print column names
data_colnames <- data %>%
colnames()
# remove NA
data <- na.omit(data)
# change proportion of deaths from string to int
# remove % sign
data$Deaths....male. <- gsub("%$","",data$Deaths....male.)
data$Deaths....female. <- gsub("%$","",data$Deaths....female.)
data$Cases....male. <- gsub("%$","",data$Cases....male.)
data$Cases....female. <- gsub("%$","",data$Cases....female.)
# str to int
data$Deaths....male. <- strtoi(data$Deaths....male.)
data$Deaths....female. <- strtoi(data$Deaths....female.)
data$Cases....male. <- strtoi(data$Cases....male.)
data$Cases....female. <- strtoi(data$Cases....female.)
#merge data
data <- data %>%
left_join(gdp_data, by = c("Country" = "Country.Name"))
# mean proportion of deaths / cases by gender
female_prop_deaths_mean <- mean(data$Deaths....female.)
male_prop_deaths_mean <- mean(data$Deaths....male.)
female_prop_cases_mean <- mean(data$Cases....female.)
male_prop_cases_mean <- mean(data$Cases....male.)
GDP_plot <- ggplot(data = data, aes(x = X2020,
y = Deaths.where.sex.disaggregated.data.is.available) +
geom_point() +
labs(title = "Global GDP vs Covid-Related Deaths", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)"))
GDP_plot <- ggplot(data = data, aes(x = Country,
y = Deaths.where.sex.disaggregated.data.is.available) +
geom_point() +
labs(title = "Global GDP vs Covid-Related Deaths", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)"))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
data <- read.csv('../data/global_dataset.csv')
gdp_data <- read.csv('../data/gdp_dataset.csv')
# filtered data which have complete disaggregated data
data <- data %>%
filter(
Case...death.data.by.sex. == "Yes"
)
#select 2020 GDP values
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
# print column names
data_colnames <- data %>%
colnames()
# remove NA
data <- na.omit(data)
# change proportion of deaths from string to int
# remove % sign
data$Deaths....male. <- gsub("%$","",data$Deaths....male.)
data$Deaths....female. <- gsub("%$","",data$Deaths....female.)
data$Cases....male. <- gsub("%$","",data$Cases....male.)
data$Cases....female. <- gsub("%$","",data$Cases....female.)
# str to int
data$Deaths....male. <- strtoi(data$Deaths....male.)
data$Deaths....female. <- strtoi(data$Deaths....female.)
data$Cases....male. <- strtoi(data$Cases....male.)
data$Cases....female. <- strtoi(data$Cases....female.)
#merge data
data <- data %>%
left_join(gdp_data, by = c("Country" = "Country.Name"))
# mean proportion of deaths / cases by gender
female_prop_deaths_mean <- mean(data$Deaths....female.)
male_prop_deaths_mean <- mean(data$Deaths....male.)
female_prop_cases_mean <- mean(data$Cases....female.)
male_prop_cases_mean <- mean(data$Cases....male.)
GDP_plot <- ggplot(data = data, aes(x = Country,
y = Deaths.where.sex.disaggregated.data.is.available) +
geom_point() +
labs(title = "Global GDP vs Covid-Related Deaths", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)"))
GDP_plot <- ggplot(data = data, aes(x = Country,
y = Deaths.where.sex.disaggregated.data.is.available) +
geom_point() +
labs(title = "Global GDP vs Covid-Related Deaths", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)"))
# plot for distribution of deaths and case proportions for Females
Gender_deaths_plot <- ggplot(data = data, aes(x = Cases....female.,
y = Deaths....female.)) +
geom_point() +
labs(title = "Proportion of Deaths vs Proportion of Cases for Females", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)")
Gender_deaths_plot
# Data frame that only contains the top 10 diseases for deaths
top_10_by_deaths <- colombia_data %>%
filter(metric == "deaths") %>%
arrange(desc(Value)) %>%
select(cause, Value) %>%
rename(Cause = cause) %>%
top_n(10)
# Set up
library(dplyr)
library(knitr)
library(ggplot2)
library(tidyverse)
# Load data
colombia_data <- read.csv('data/prepped/overview.csv')
# Data frame that only contains the top 10 diseases for deaths
top_10_by_deaths <- colombia_data %>%
filter(metric == "deaths") %>%
arrange(desc(Value)) %>%
select(cause, Value) %>%
rename(Cause = cause) %>%
top_n(10)
kable(top_10_by_deaths)
View(colombia_data)
top_10_country_deaths <- data %>%
filter(metric == "Country") %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available) %>%
top_n(15)
# Set up
library(dplyr)
library(knitr)
library(ggplot2)
library(tidyverse)
# Load data
colombia_data <- read.csv('data/prepped/overview.csv')
colombia_data <- read.csv('data/prepped/overview.csv')
View(colombia_data)
top_10_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available) %>%
top_n(15)
View(top_10_country_deaths)
top_10_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID"))
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID"))
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID")
GDP_plot
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID")
GDP_plot
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID")
GDP_plot
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
data <- read.csv('../data/global_dataset.csv')
gdp_data <- read.csv('../data/gdp_dataset.csv')
# filtered data which have complete disaggregated data
data <- data %>%
filter(
Case...death.data.by.sex. == "Yes"
)
#select 2020 GDP values
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
# print column names
data_colnames <- data %>%
colnames()
# remove NA
data <- na.omit(data)
# change proportion of deaths from string to int
# remove % sign
data$Deaths....male. <- gsub("%$","",data$Deaths....male.)
data$Deaths....female. <- gsub("%$","",data$Deaths....female.)
data$Cases....male. <- gsub("%$","",data$Cases....male.)
data$Cases....female. <- gsub("%$","",data$Cases....female.)
# str to int
data$Deaths....male. <- strtoi(data$Deaths....male.)
data$Deaths....female. <- strtoi(data$Deaths....female.)
data$Cases....male. <- strtoi(data$Cases....male.)
data$Cases....female. <- strtoi(data$Cases....female.)
#merge data
data <- data %>%
left_join(gdp_data, by = c("Country" = "Country.Name"))
# mean proportion of deaths / cases by gender
female_prop_deaths_mean <- mean(data$Deaths....female.)
male_prop_deaths_mean <- mean(data$Deaths....male.)
female_prop_cases_mean <- mean(data$Cases....female.)
male_prop_cases_mean <- mean(data$Cases....male.)
# plot for distribution of deaths and case proportions for Females
Gender_deaths_plot <- ggplot(data = data, aes(x = Cases....female.,
y = Deaths....female.)) +
geom_point() +
labs(title = "Proportion of Deaths vs Proportion of Cases for Females", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)")
Gender_deaths_plot
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID")
GDP_plot
view(GDP_plot)
view(Gender_deaths_plot)
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID")
GDP_plot
print(GDP_plot)
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID")
print(GDP_plot)
View(GDP_plot)
print(GDP_plot)
burden_by_cause <- overall_metric_data %>%
group_by(cause_name) %>%
summarise(deaths = mean(deaths, na.rm=TRUE), ylds = mean(ylds, na.rm=TRUE), ylls = mean(ylls, na.rm=TRUE), dalys = mean(dalys, na.rm=TRUE)) %>%
top_n(10)
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 Global Deaths vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
print(GDP_plot)
View(top_15_country_deaths)
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
GDP_plot
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
GDP_plot
install.packages("leaflet")
install.packages("tigris")
# plot for distribution of deaths and case proportions for Females
Male_deaths_plot <- ggplot(data = data, aes(x = Cases....male.,
y = Deaths....male.)) +
geom_point() +
labs(title = "Proportion of Deaths for Males vs Proportion of Cases for Males", x = "Proportion of confirmed cases Male (%)", y = "Proportion of deaths in confirmed cases Male (%)")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(leaflet)
library(tigris)
data <- read.csv('../data/global_dataset.csv')
gdp_data <- read.csv('../data/gdp_dataset.csv')
raw_state_data <- read.csv('../data/us_state_vaccinations.csv')
# filtered data which have complete disaggregated data
data <- data %>%
filter(
Case...death.data.by.sex. == "Yes"
)
#select 2020 GDP values
gdp_data <- gdp_data %>%
select(Country.Name, X2020)
# print column names
data_colnames <- data %>%
colnames()
# remove NA
data <- na.omit(data)
# change proportion of deaths from string to int
# remove % sign
data$Deaths....male. <- gsub("%$","",data$Deaths....male.)
data$Deaths....female. <- gsub("%$","",data$Deaths....female.)
data$Cases....male. <- gsub("%$","",data$Cases....male.)
data$Cases....female. <- gsub("%$","",data$Cases....female.)
# str to int
data$Deaths....male. <- strtoi(data$Deaths....male.)
data$Deaths....female. <- strtoi(data$Deaths....female.)
data$Cases....male. <- strtoi(data$Cases....male.)
data$Cases....female. <- strtoi(data$Cases....female.)
#merge data
data <- data %>%
left_join(gdp_data, by = c("Country" = "Country.Name"))
# mean proportion of deaths / cases by gender
female_prop_deaths_mean <- mean(data$Deaths....female.)
male_prop_deaths_mean <- mean(data$Deaths....male.)
female_prop_cases_mean <- mean(data$Cases....female.)
male_prop_cases_mean <- mean(data$Cases....male.)
# plot for distribution of deaths and case proportions for Females
Gender_deaths_plot <- ggplot(data = data, aes(x = Cases....female.,
y = Deaths....female.)) +
geom_point() +
labs(title = "Proportion of Deaths vs Proportion of Cases for Females", x = "Proportion of confirmed cases Female (%)", y = "Proportion of deaths in confirmed cases Female (%)")
Gender_deaths_plot
# plot for distribution of deaths and case proportions for Females
Male_deaths_plot <- ggplot(data = data, aes(x = Cases....male.,
y = Deaths....male.)) +
geom_point() +
labs(title = "Proportion of Deaths for Males vs Proportion of Cases for Males", x = "Proportion of confirmed cases Male (%)", y = "Proportion of deaths in confirmed cases Male (%)")
Male_deaths_plot
View(data)
top_15_country_deaths <- data %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
GDP_plot
top_15_country_deaths <- data %>%
filter(Deaths.date == "2022/03/01") %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
GDP_plot
top_15_country_deaths <- data %>%
filter(Deaths.date == "2020/09") %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
GDP_plot
top_15_country_deaths <- data %>%
filter(Deaths.date == "2021/12/14") %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
GDP_plot
top_15_country_deaths <- data %>%
filter(Deaths.date == "2022/1/17") %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
GDP_plot
top_15_country_deaths <- data %>%
filter(Deaths.date == "2022/01/17") %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
GDP_plot
top_15_country_deaths <- data %>%
filter(Deaths.date == "2022/03/01") %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = Country,
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
GDP_plot
top_15_country_deaths <- data %>%
filter(Deaths.date == "2022/03/01") %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = fct_inorder(Country),
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
GDP_plot
top_15_country_deaths <- data %>%
filter(Deaths.date == "2022/03/01") %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = fct_inorder(Country),
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
GDP_plot
top_15_country_deaths <- data %>%
filter(Deaths.date == "2022/03/01") %>%
arrange(desc(Deaths.where.sex.disaggregated.data.is.available)) %>%
select(Country, Deaths.where.sex.disaggregated.data.is.available, X2020) %>%
rename(Deaths = Deaths.where.sex.disaggregated.data.is.available, GDP = X2020) %>%
top_n(15)
GDP_plot <- ggplot(data = top_15_country_deaths, aes(x = fct_inorder(Country),
y = Deaths, color = GDP)) +
geom_point() +
labs(title = "Top 15 COVID Deaths by Country vs GDP", x = "Country", y = "Deaths from COVID") + theme(axis.text.x = element_text(angle = 90))
GDP_plot
state_data <- raw_state_data %>%
group_by(location) %>%
filter(date == max(date)) %>%
select(location, total_boosters_per_hundred)
states <- states(cb = T)
states_merged <- geo_join(states, state_data, "NAME", "location")
states_merged <- subset(states_merged, !is.na(total_boosters_per_hundred))
pal <- colorNumeric("Blues", domain = states_merged$total_boosters_per_hundred)
map <- leaflet(states_merged) %>%
addTiles() %>%
addPolygons(data = states_merged,
color = "black",
opacity = 1,
fillColor = ~pal(states_merged$total_boosters_per_hundred),
fillOpacity = 1,
weight = 1,
smoothFactor = 0.8,
popup = ~total_boosters_per_hundred) %>%
addLegend("bottomleft", pal = pal, values = states_merged$total_boosters_per_hundred,
layerId = "colorLegend", title = "Booster Shot %", opacity = 1)
map
